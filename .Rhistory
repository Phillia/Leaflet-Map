setwd("~/Desktop/leaflet-map")
#https://github.com/sassalley/hexmapr
library(devtools)
library(ggplot2)
library(viridis)
library(plyr)
library(dplyr)
# install_github("sassalley/hexmapr")
library(hexmapr)
library(gridExtra)
#read in shapefile
library(rgdal)
rating_area <- readOGR(dsn="./output/ratingAreas.shp",
layer = "ratingAreas",verbose = FALSE)
library(maptools)
trans <- function(dt,type) {
# convert it to Albers equal area
us_aea <- spTransform(dt, CRS("+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"))
us_aea@data$id <- rownames(us_aea@data)
###rules to filter states
if(type=="rating") {
alaska <- us_aea[grepl("AK_*",us_aea$name),]
hawaii <- us_aea[grepl("HI_*",us_aea$name),]
alaska <- elide(alaska, rotate=-50)
alaska <- elide(alaska, scale=max(apply(bbox(alaska), 1, diff)) / 2.3)
alaska <- elide(alaska, shift=c(-1870000, -2500000))
} else if (type=="county") {
alaska <- us_aea[us_aea$STATEFP=="02",]
hawaii <- us_aea[us_aea$STATEFP=="15",]
alaska <- elide(alaska, rotate=-50)
alaska <- elide(alaska, scale=max(apply(bbox(alaska), 1, diff)) / 2.3)
alaska <- elide(alaska, shift=c(-2100000, -2500000))
} else stop("type error")
# extract, then rotate, shrink & move alaska (and reset projection)
proj4string(alaska) <- proj4string(us_aea)
# extract, then rotate & shift hawaii
hawaii <- elide(hawaii, rotate=-35)
hawaii <- elide(hawaii, shift=c(5400000, -1400000))
proj4string(hawaii) <- proj4string(us_aea)
if(type=="rating") {
us_aea <- us_aea[!grepl("AK_*",us_aea$name) & !grepl("HI_*",us_aea$name),]
} else if (type=="county") {
us_aea <- us_aea[!us_aea$STATEFP %in% c("02", "15", "72"),]
} else stop("type error")
us_aea <- rbind(us_aea, alaska, hawaii)
# remove old states and put new ones back in; note the different order
# we're also removing puerto rico in this example but you can move it
# between texas and florida via similar methods to the ones we just used
us_aea2 <- spTransform(us_aea, proj4string(dt))
return(us_aea2)
}
rating_area <- trans(rating_area,type="rating")
###rating area for each state
states <- unique(substr(rating_area$name,1,2))
crit <- data.frame(table(substr(rating_area$name,1,2))) %>% filter(Freq>=5)
states2 <- as.character(crit$Var1)
st2fix <- states[!(states %in% states2)]
tocheck <- states[!(states %in% states2)]
tocheck
x <- "NE"
rating_area$name[grepl(st,rating_area$name)]
x <- "NE"
rating_area$name[grepl(x,rating_area$name)]
duet <- function(st1,st2,save1,save2,seed=1) {
test <- rating_area[grepl(st1,rating_area$name) | grepl(st2,rating_area$name),]
original_shapes <- test
original_details <- get_shape_details(original_shapes)
new_cells_hex <-  calculate_cell_size(original_shapes, original_details,0.03, 'hexagonal', seed)
resulthex <- assign_polygons(original_shapes,new_cells_hex)
new <- new_cells_hex[[2]]
new$order <- new@plotOrder
t <- data.frame(order=test@plotOrder,name=as.character(test$name))
new@data <- new@data %>% left_join(t,by="order")
if(save1==TRUE) {
s <- new[grepl(st1,new$name),]
out <- paste0("hex_",st1,seed)
assign(out,s)
outname <- paste0("./hexstate/",out,".jpeg")
jpeg(file=outname)
plot(s, main = paste0(st1,"_","Seed ",seed))
dev.off()
save(out,file=paste0("./hexstate/",out,".rda"))
}
if(save2==TRUE) {
s <- new[grepl(st2,new$name),]
out <- paste0("hex_",st2,seed)
assign(out,s)
outname <- paste0("./hexstate/",out,".jpeg")
jpeg(file=outname)
plot(s, main = paste0(st2,"_","Seed ",seed))
dev.off()
save(out,file=paste0("./hexstate/",out,".rda"))
}
}
duet("HI","AK",T,T)
duet <- function(st1,st2,save1,save2,seed=1) {
test <- rating_area[grepl(st1,rating_area$name) | grepl(st2,rating_area$name),]
original_shapes <- test
original_details <- get_shape_details(original_shapes)
new_cells_hex <-  calculate_cell_size(original_shapes, original_details,0.03, 'hexagonal', seed)
resulthex <- assign_polygons(original_shapes,new_cells_hex)
new <- new_cells_hex[[2]]
new$order <- new@plotOrder
t <- data.frame(order=test@plotOrder,name=as.character(test$name))
new@data <- new@data %>% left_join(t,by="order")
if(save1==TRUE) {
s <- new[grepl(st1,new$name),]
out <- paste0("hex",st1,seed,sep="_")
assign(out,s)
outname <- paste0("./hexstate/",out,".jpeg")
jpeg(file=outname)
plot(s, main = paste0(st1,"_","Seed ",seed))
dev.off()
save(out,file=paste0("./hexstate/",out,".rda"))
}
if(save2==TRUE) {
s <- new[grepl(st2,new$name),]
out <- paste0("hex",st2,seed,sep="_")
assign(out,s)
outname <- paste0("./hexstate/",out,".jpeg")
jpeg(file=outname)
plot(s, main = paste0(st2,"_","Seed ",seed))
dev.off()
save(out,file=paste0("./hexstate/",out,".rda"))
}
}
duet("HI","AK",T,T)
duet <- function(st1,st2,save1,save2,seed=1) {
test <- rating_area[grepl(st1,rating_area$name) | grepl(st2,rating_area$name),]
original_shapes <- test
original_details <- get_shape_details(original_shapes)
new_cells_hex <-  calculate_cell_size(original_shapes, original_details,0.03, 'hexagonal', seed)
resulthex <- assign_polygons(original_shapes,new_cells_hex)
new <- new_cells_hex[[2]]
new$order <- new@plotOrder
t <- data.frame(order=test@plotOrder,name=as.character(test$name))
new@data <- new@data %>% left_join(t,by="order")
if(save1==TRUE) {
s <- new[grepl(st1,new$name),]
out <- paste0("hex_",st1,seed)
assign(out,s)
outname <- paste0("./hexstate/",out,".jpeg")
jpeg(file=outname)
plot(s, main = paste0(st1,"_","Seed ",seed))
dev.off()
save(out,file=paste0("./hexstate/",out,".rda"))
}
if(save2==TRUE) {
s <- new[grepl(st2,new$name),]
out <- paste0("hex_",st2,seed)
assign(out,s)
outname <- paste0("./hexstate/",out,".jpeg")
jpeg(file=outname)
plot(s, main = paste0(st2,"_","Seed ",seed))
dev.off()
save(out,file=paste0("./hexstate/",out,".rda"))
}
}
duet("HI","AK",T,T)
x <- "NE"
rating_area$name[grepl(x,rating_area$name)]
x <- "KS"
rating_area$name[grepl(x,rating_area$name)]
x <- "CO"
rating_area$name[grepl(x,rating_area$name)]
x <- "IA"
rating_area$name[grepl(x,rating_area$name)]
x <- "WY"
rating_area$name[grepl(x,rating_area$name)]
x <- "SD"
rating_area$name[grepl(x,rating_area$name)]
duet("NE","WY",T,T)
tocheck
x <- "DC"
rating_area$name[grepl(x,rating_area$name)]
x <- "DE"
rating_area$name[grepl(x,rating_area$name)]
x <- "PA"
rating_area$name[grepl(x,rating_area$name)]
x <- "MD"
rating_area$name[grepl(x,rating_area$name)]
tocheck
duet("DC","MD",T,F)
tocheck
x <- "DE"
rating_area$name[grepl(x,rating_area$name)]
duet("DE","MD",T,F)
to check()
tocheck
x <- "ME"
rating_area$name[grepl(x,rating_area$name)]
x <- "NH"
rating_area$name[grepl(x,rating_area$name)]
duet("DE","MD",T,T)
duet("ME","NH",T,T)
tocheck
duet("DC","MD",T,T)
duet("DE","NJ",T,T)
tocheck
for(i in tocheck) {
print(i)
rating_area$name[grepl(i,rating_area$name)]
}
for(i in tocheck) {
print(i)
length(rating_area$name[grepl(i,rating_area$name)])
}
length(rating_area$name[grepl(x,rating_area$name)])
for(i in tocheck) {
print(i,length(rating_area$name[grepl(i,rating_area$name)]))
}
for(i in tocheck) {
print(paste(i,length(rating_area$name[grepl(i,rating_area$name)])))
}
length(rating_area$name[grepl("UT",rating_area$name)]
)
length(rating_area$name[grepl("ID",rating_area$name)])
length(rating_area$name[grepl("OR",rating_area$name)])
length(rating_area$name[grepl("AZ",rating_area$name)])
duet("NV","UT",T,F)
duet("NV","UT",T,F)
duet("NV","AZ",T,F)
duet("NV","ID",T,F)
duet("NV","OR",T,F)
duet("NV","CA",T,F)
duet("NV","DC",T,F)
duet("NV","CO",T,F)
duet("NV","DC",T,T)
duet("WY","MT",T,T)
duet("WY","MT",T,T)
duet("WY","NE",T,T)
duet("WY","SD",T,T)
duet("WY","NE",T,T)
duet("WY","DC",T,F)
duet("MT","ND",T,T)
duet("MT","SD",T,T)
duet("MT","SD",T,T)
duet("MT","NE",T,T)
duet("MT","DC",T,F)
duet("MT","HI",T,F)
duet("MT","AK",T,F)
duet("MT","HI",T,F)
duet("MT","AK",T,T)
duet("ND","SD",T,T)
duet("ND","NE",T,T)
duet("ND","DC",T,F)
duet("ND","HI",T,F)
duet("SD","NE",T,T)
duet("SD","MN",T,F)
duet("SD","IA",T,F)
duet("SD","DC",T,F)
duet("NE","KS",T,F)
duet("NE","RI",T,T)
duet("NE","MD",T,T)
duet("NE","DC",T,F)
duet("ND","DC",T,F)
duet("NE","AK",T,F)
duet("NE","NJ",T,F)
duet("NE","NJ",T,T)
duet("WY","VT",T,T)
duet("MT","AK",T,T)
duet("MT","DE",T,T)
duet("MT","RI",T,T)
duet("MT","NH",T,T)
duet("MT","HI",T,T)
duet("MT","MD",T,T)
duet("MT","ME",T,T)
duet("MT","DC",T,F)
duet("MT","AK",T,F)
duet("ND","RI",T,T)
duet("SD","NH",T,T)
duet("SD","HI",T,T)
duet("NE","AK",T,T)
duet("NE","DE",T,T)
duet("AK","NH",T,T)
duet("AK","MD",T,T)
duet("AK","ME",T,T)
duet("AK","AZ",T,F)
duet("ME","NH",T,T)
duet("MD","DC",T,F)
duet("MD","DE",T,F)
